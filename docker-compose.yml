version: "3.8"

services:
  postgres:
    container_name: postgres
    image: library/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: keycloak_db
    ports:
      - "5432:5432"
    restart: unless-stopped
    
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    volumes:
      - ./backend/keycloak/realm-export.json:/opt/jboss/keycloak/imports/realm-export.json
#      - ./keycloak/keycloak-add-user.json:/opt/jboss/keycloak/standalone/configuration/keycloak-add-user.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak_db
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin_password
    ports:
      - "8080:8080"
    restart: unless-stopped
    depends_on:
      - postgres
    healthcheck:
      test: curl --fail http://localhost:5432 || exit 1
      interval: 30s
      retries: 5
      start_period: 100s
      timeout: 100s

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRES_USER:-postgres@ya.ru}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_USER:-postgres}
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      - postgres
      - keycloak
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 30s
      retries: 5
      start_period: 15s
      timeout: 15s
    
  config:
    build: 
      context: .
      dockerfile: docker/config.Dockerfile
    container_name: 'config'
    ports:
      - '8888:8888'
    restart: unless-stopped
    depends_on:
      - keycloak 
    healthcheck:
      test: curl --fail http://localhost:8080 || exit 1
      interval: 60s
      retries: 5
      start_period: 50s
      timeout: 50s
    
  eureka:
    build: 
      context: .
      dockerfile: docker/eureka.Dockerfile
    container_name: 'eureka'
    ports:
      - '8761:8761'
    restart: unless-stopped
    depends_on:
      - config  
    healthcheck:
      test: curl --fail http://localhost:8888 || exit 1
      interval: 60s
      retries: 5
      start_period: 70s
      timeout: 70s
    
  gateway:
    build: 
      context: .
      dockerfile: docker/gateway.Dockerfile
    container_name: 'gateway'
    ports:
      - '9090:9090'
    restart: unless-stopped
    depends_on:
      - eureka
    healthcheck:
      test: curl --fail http://localhost:9090 || exit 1
      interval: 60s
      retries: 5
      start_period: 90s
      timeout: 90s
      
  resource:
    build: 
      context: .
      dockerfile: docker/resource.Dockerfile
    container_name: 'resource'
    ports:
      - '9191:9191'
    restart: unless-stopped
    depends_on:
      - eureka
    healthcheck:
      test: curl --fail http://localhost:9090 || exit 1
      interval: 60s
      retries: 5
      start_period: 90s
      timeout: 90s
